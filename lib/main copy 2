import 'package:flutter/material.dart';
import 'package:flutter_vlc_player/flutter_vlc_player.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Loop Video Player',
      home: LoopVideoPlayer(),
    );
  }
}

class LoopVideoPlayer extends StatefulWidget {
  LoopVideoPlayer({Key key}) : super(key: key);

  @override
  _LoopVideoPlayerState createState() => _LoopVideoPlayerState();
}

class _LoopVideoPlayerState extends State<LoopVideoPlayer> {
  VlcPlayerController _controller;

  static final String _video1 = 'assets/videos/running.mp4';
  static final String _video2 = 'assets/videos/running2.mp4';
  static final String _video3 = 'assets/videos/running3.mp4';

  String _videoDisplayed = _video1;

  String _imageDisplayed;

  Future<void> _loopVideos() async {
    // Set the displayed controller
    if (_videoDisplayed != _video1) setState(() => _videoDisplayed = _video1);

    // Play the video
    await _controller.play();

    // Set image display
    setState(() => _imageDisplayed = 'assets/pictures/1.png');

    // Display the first image for 5 seconds
    await Future.delayed(
      const Duration(seconds: 5),
      // After 5 seconds, display the second image
      () => setState(() => _imageDisplayed = 'assets/pictures/2.png'),
    );
    await Future.delayed(
        const Duration(seconds: 5),
        // Remove the second image and play the video
        () => setState(() {
              _imageDisplayed = null;
              _videoDisplayed = _video2;
            }));
    await _controller.play();
    setState(() => _videoDisplayed = _video3);
    await _controller.play();

    // Run the function again after the 3rd video had finished playing
    _loopVideos();
  }

  @override
  void initState() {
    super.initState();
    _controller = VlcPlayerController(
      onInit: () => _loopVideos(),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      body: VlcPlayer(
        aspectRatio: 16 / 9,
        url: _videoDisplayed,
        controller: _controller,
        placeholder: Center(child: CircularProgressIndicator()),
      ),
    );
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }
}
